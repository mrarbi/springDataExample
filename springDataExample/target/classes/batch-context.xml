<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/batch"
     xmlns:beans="http://www.springframework.org/schema/beans"
     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
     xmlns:jdbc="http://www.springframework.org/schema/jdbc"
     xmlns:jpa="http://www.springframework.org/schema/data/jpa"
     xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/batch
        http://www.springframework.org/schema/batch/spring-batch.xsd
        http://www.springframework.org/schema/jdbc 
  		http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd
  		http://www.springframework.org/schema/data/jpa
    	http://www.springframework.org/schema/data/jpa/spring-jpa.xsd">
  		
 	<jpa:repositories base-package="auto.from.spring.data"/>

	<beans:bean id="personneReaderCSV" class="org.springframework.batch.item.file.FlatFileItemReader">
		<beans:property name="resource" value="classpath:personnes.csv" />
		<beans:property name="lineMapper">
			<beans:bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
				<beans:property name="lineTokenizer">
					<beans:bean
						class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
						<beans:property name="delimiter" value="," />
						<beans:property name="names" value="id,nom,prenom,civilite" />
					</beans:bean>
				</beans:property>
				<beans:property name="fieldSetMapper">
					<beans:bean
						class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
						<beans:property name="targetType" value="auto.from.spring.data.example.Person" />
					</beans:bean>
				</beans:property>
			</beans:bean>
		</beans:property>
	</beans:bean>

	<beans:bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <beans:property name="driverClassName" value="com.mysql.jdbc.Driver"/>
        <beans:property name="url" value="jdbc:mysql://localhost:3306/test"/>
        <beans:property name="username" value="root"/>
        <beans:property name="password" value="root"/>
    </beans:bean>
    
    <beans:bean id="jpaVendorAdapter" class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
        <beans:property name="showSql" value="true"/>
        <beans:property name="generateDdl" value="true"/>
        <beans:property name="database" value="MYSQL"/>
    </beans:bean>

    <beans:bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <beans:property name="dataSource" ref="dataSource"/>
        <beans:property name="jpaVendorAdapter" ref="jpaVendorAdapter"/>
        <!-- spring based scanning for entity classes-->
        <beans:property name="packagesToScan" value="auto.from.spring.data.example"/>
    </beans:bean>
    
    <!-- create job-meta tables automatically -->
	<jdbc:initialize-database data-source="dataSource">
		<jdbc:script location="org/springframework/batch/core/schema-drop-mysql.sql" />
		<jdbc:script location="org/springframework/batch/core/schema-mysql.sql" />
	</jdbc:initialize-database>
    
    <beans:bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager"/>
    
<!-- 	<job-repository id="jobRepository" data-source="dataSource" transaction-manager="transactionManager"/> -->
	
	<beans:bean id="jobRepository" class="org.springframework.batch.core.repository.support.JobRepositoryFactoryBean">
        <beans:property name="isolationLevelForCreate" value="ISOLATION_DEFAULT"/>
        <beans:property name="dataSource" ref="dataSource"/>
        <beans:property name="transactionManager" ref="transactionManager"/>
	</beans:bean>
	
	<beans:bean id="jobLauncher" class="org.springframework.batch.core.launch.support.SimpleJobLauncher">
	    <beans:property name="jobRepository" ref="jobRepository" />
<!-- 	    <beans:property name="taskExecutor"> -->
<!-- 	        <beans:bean class="org.springframework.core.task.SimpleAsyncTaskExecutor" > -->
<!-- 	        </beans:bean> -->
<!-- 	    </beans:property> -->
	</beans:bean>
	
	<beans:bean id="personProcessor" class="auto.from.spring.batch.PersonProcessor" />
	<beans:bean id="personDaoWriter" class="auto.from.spring.batch.PersonJdbcWriter" />
	
	<job id="importPersonnes">
		<step id="readWritePersonne">
			<tasklet>
				<chunk reader="personneReaderCSV" writer="personDaoWriter"
					processor="personProcessor" commit-interval="1" />
			</tasklet>
		</step>
	</job>

</beans:beans>